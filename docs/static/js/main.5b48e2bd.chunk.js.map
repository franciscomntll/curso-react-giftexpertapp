{"version":3,"sources":["components/AddCategory.js","helpers/GetGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","placeholder","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAmB9C,OACI,0BAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,QAAU,IAC7BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OASd,2BACIO,KAAK,OACLC,YAAY,WACZC,MAASV,EACTW,SAtBc,SAACR,GACvBF,EAAcE,EAAES,OAAOF,Y,uBCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,gDAEkCC,UAAWH,GAF7C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAGFC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAXtB,kBAeZM,GAfY,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,yBAAKc,UAAU,oEACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCHHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECAb,SAACA,GAAc,IAAD,EAEZf,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAqBtC,OAdAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAM,SAAAC,GAECH,EAAU,CACNf,KAAMkB,EACNL,SAAS,SAI1B,CAACpB,IAGGqB,EDnByBK,CAAc1B,GAAlCa,EAFyB,EAE9BN,KAAca,EAFgB,EAEhBA,QAErB,OACI,oCACA,wBAAIJ,UAAU,sCAAsChB,GACnDoB,GAAW,uBAAGJ,UAAU,qCAAb,cACZ,yBAAKA,UAAU,aAEPH,EAAOJ,KAAK,SAACC,GAAD,OACZ,kBAAC,EAAD,eACIA,IAAMA,EACNiB,IAAKjB,EAAIC,IACLD,UEdXkB,EAAe,WAAO,IAAD,EAEM3C,mBAAS,CAAC,gBAFhB,mBAEvB4C,EAFuB,KAEX7C,EAFW,KAQ9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAAQ8C,QAVI,WACf9C,EAAc,CAAC,iBASZ,qBAEA,4BAEQ6C,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACI2B,IAAM3B,EACNA,SAAYA,U,MCpBxC+B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.5b48e2bd.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState(\"\")\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length >= 2 ) {\r\n            setCategories(cats => [inputValue, ...cats])\r\n            setInputValue(\"\");\r\n        }\r\n        \r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                placeholder=\"Buscador\"\r\n                value = {inputValue}\r\n                onChange= {handleInputChange}>\r\n            </input>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async( category ) => {\r\n        \r\n    const url= `http://api.giphy.com/v1/gifs/search?q=${ encodeURI (category) }&limit=10&api_key=m04mjuQzyH9cK1EAPTc5QyaY2ALvsZIl`\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n    \r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n    \r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__bounceInDown animate__delay-10s \">\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const {data:images , loading} = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\" animate__animated animate__fadeIn\">{category}</h3>\r\n        {loading && <p className=\" animate__animated animate__flash\">Loading...</p>}\r\n        <div className=\"card-grid\">\r\n            {\r\n                images.map( (img) => (\r\n                <GifGridItem \r\n                    img={ img }\r\n                    key={img.id}\r\n                    {...img}\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/GetGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n   \r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        \r\n        getGifs( category )\r\n            .then( imgs => {\r\n\r\n                    setstate ({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n            })\r\n        \r\n    }, [category])\r\n\r\n   \r\n    return state; \r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './AddCategory'\r\nimport { GifGrid } from './GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState([\"Dragon Ball\"])\r\n\r\n     const clickBoton = () => {\r\n         setCategories([\"Juan Pablo\"])\r\n     }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n\r\n            <button onClick={clickBoton}>Agregar categoria</button>\r\n\r\n            <ol>\r\n            {\r\n                    categories.map( category => ( \r\n                        <GifGrid\r\n                            key={ category }\r\n                            category ={ category }\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './components/GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}